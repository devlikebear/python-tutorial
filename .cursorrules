# Python Tutorial Project - Cursor Rules

## Project Overview
This is a Python tutorial creation project designed to provide comprehensive learning materials for Python programming from beginner to advanced levels.

## Roles & Responsibilities
- **AI Assistant**: Acts as a Python instructor/teacher
- **User**: Acts as a learner/student

## Project Structure & Workflow

### 1. Curriculum Development
- Create three-tier curriculum structure in project root:
  - Beginner level curriculum
  - Intermediate level curriculum  
  - Advanced level curriculum
- Each curriculum should outline clear learning objectives and chapter progression

### 2. Tutorial Creation
- Generate tutorials following the established curriculum
- Create chapter-based content using Markdown files (.md files)
- Ensure progressive difficulty and comprehensive coverage of topics
- Include practical examples and hands-on exercises

### 3. Assessment Materials
- Create quiz files in JSON format after each chapter completion
- JSON structure should contain:
  - Questions
  - Answer choices (for multiple choice)
  - Correct answers
  - Explanations (optional)

### 4. Quiz Application
- Develop a quiz application that uses the generated JSON quiz files as input
- Application should be interactive and provide feedback to learners

### 5. Version Control and Documentation
- **Git Commits**: Create a git commit after completing each chapter
- **Commit Messages**: Use English with clear, descriptive messages (e.g., "Add Chapter 1: Python Introduction and Environment Setup")
- **Changelog Management**: Update `changelogs.md` file after each chapter completion
- **Progress Tracking**: Record tutorial creation progress, completion dates, and any notable changes

## File Organization
```
project-root/
├── curricula/
│   ├── beginner_curriculum.md
│   ├── intermediate_curriculum.md
│   └── advanced_curriculum.md
├── tutorials/
│   ├── beginner/
│   ├── intermediate/
│   └── advanced/
├── quizzes/
│   ├── beginner/
│   ├── intermediate/
│   └── advanced/
├── quiz_app/
└── changelogs.md
```

## Content Guidelines
- Use clear, pedagogical explanations suitable for the target audience level
- Include practical, real-world examples
- Ensure code examples are well-commented and executable
- Maintain consistency in teaching methodology across all materials

## Technical Requirements
- Markdown files for tutorial content (.md)
- JSON format for quiz data
- Interactive quiz application (web-based or CLI)
- Clear documentation and README files

## Time and Date Management
- **Current Time Retrieval**: Always use MCP time server to get current time
- **Default Timezone**: Use 'Asia/Seoul' as the local timezone for all time operations
- **Time Display Format**: Use consistent time format throughout the project
- **Changelog Timestamps**: Include accurate timestamps in changelog entries using MCP time server

## Workflow Protocol
1. **Chapter Creation**: Write tutorial content following curriculum guidelines
2. **Quiz Development**: Create corresponding quiz after chapter completion
3. **Git Commit**: Commit changes with descriptive English message
4. **Changelog Update**: Record progress in `changelogs.md`
5. **Quality Check**: Review content for clarity and completeness before proceeding 