{
    "quiz_info": {
        "title": "Chapter 14: GUI 프로그래밍 기초 퀴즈",
        "description": "tkinter를 활용한 GUI 프로그래밍의 기초부터 고급 기능까지 테스트합니다",
        "total_questions": 42,
        "time_limit": 55,
        "passing_score": 70,
        "difficulty_distribution": {
            "기본": 16,
            "중급": 18,
            "고급": 6,
            "전문가": 2
        }
    },
    "questions": [
        {
            "id": 1,
            "type": "multiple_choice",
            "difficulty": "기본",
            "question": "tkinter에서 메인 윈도우를 생성하는 클래스는?",
            "options": [
                "Window",
                "Tk",
                "Root",
                "MainWindow"
            ],
            "correct_answer": 1,
            "explanation": "tkinter.Tk()를 사용하여 메인 윈도우(루트 윈도우)를 생성합니다."
        },
        {
            "id": 2,
            "type": "multiple_choice",
            "difficulty": "기본",
            "question": "GUI 애플리케이션의 이벤트 루프를 시작하는 메서드는?",
            "options": [
                "start()",
                "run()",
                "mainloop()",
                "execute()"
            ],
            "correct_answer": 2,
            "explanation": "mainloop() 메서드는 GUI 애플리케이션의 이벤트 루프를 시작하여 사용자 상호작용을 처리합니다."
        },
        {
            "id": 3,
            "type": "multiple_choice",
            "difficulty": "기본",
            "question": "단일 줄 텍스트 입력에 사용되는 위젯은?",
            "options": [
                "Text",
                "Entry",
                "Input",
                "TextField"
            ],
            "correct_answer": 1,
            "explanation": "Entry 위젯은 한 줄의 텍스트 입력을 받는 데 사용됩니다."
        },
        {
            "id": 4,
            "type": "multiple_choice",
            "difficulty": "기본",
            "question": "여러 줄 텍스트 입력과 편집에 사용되는 위젯은?",
            "options": [
                "Entry",
                "Label",
                "Text",
                "MultiEntry"
            ],
            "correct_answer": 2,
            "explanation": "Text 위젯은 여러 줄의 텍스트를 입력하고 편집할 수 있는 위젯입니다."
        },
        {
            "id": 5,
            "type": "true_false",
            "difficulty": "기본",
            "question": "Button 위젯에는 command 매개변수로 콜백 함수를 지정할 수 있습니다.",
            "correct_answer": true,
            "explanation": "Button 위젯의 command 매개변수에 콜백 함수를 지정하면 버튼 클릭 시 해당 함수가 호출됩니다."
        },
        {
            "id": 6,
            "type": "multiple_choice",
            "difficulty": "기본",
            "question": "위젯을 상하좌우로 순차적으로 배치하는 레이아웃 매니저는?",
            "options": [
                "grid",
                "pack",
                "place",
                "layout"
            ],
            "correct_answer": 1,
            "explanation": "pack 레이아웃 매니저는 위젯을 TOP, BOTTOM, LEFT, RIGHT 방향으로 순차적으로 배치합니다."
        },
        {
            "id": 7,
            "type": "multiple_choice",
            "difficulty": "기본",
            "question": "위젯을 행과 열의 격자 형태로 배치하는 레이아웃 매니저는?",
            "options": [
                "pack",
                "place",
                "grid",
                "table"
            ],
            "correct_answer": 2,
            "explanation": "grid 레이아웃 매니저는 위젯을 행(row)과 열(column)의 격자 형태로 배치합니다."
        },
        {
            "id": 8,
            "type": "fill_blank",
            "difficulty": "기본",
            "question": "위젯을 절대 좌표나 상대 좌표로 정확한 위치에 배치하는 레이아웃 매니저는 _____입니다.",
            "correct_answer": "place",
            "explanation": "place 레이아웃 매니저는 x, y 좌표나 relx, rely 상대 좌표로 위젯을 정확한 위치에 배치합니다."
        },
        {
            "id": 9,
            "type": "multiple_choice",
            "difficulty": "기본",
            "question": "Listbox에서 여러 항목을 선택할 수 있도록 하는 selectmode는?",
            "options": [
                "SINGLE",
                "BROWSE",
                "MULTIPLE",
                "EXTENDED"
            ],
            "correct_answer": 3,
            "explanation": "selectmode=EXTENDED는 Ctrl+클릭이나 Shift+클릭으로 여러 항목을 선택할 수 있게 합니다."
        },
        {
            "id": 10,
            "type": "code",
            "difficulty": "기본",
            "question": "다음 코드의 실행 결과는?\n```python\nroot = tk.Tk()\nlabel = tk.Label(root, text=\"Hello\")\nlabel.pack()\nprint(label.cget(\"text\"))\n```",
            "correct_answer": "Hello",
            "explanation": "cget() 메서드는 위젯의 설정값을 가져오므로 라벨의 text 속성값인 'Hello'가 출력됩니다."
        },
        {
            "id": 11,
            "type": "multiple_choice",
            "difficulty": "기본",
            "question": "체크박스 위젯에서 사용되는 변수 타입은?",
            "options": [
                "StringVar",
                "IntVar",
                "BooleanVar",
                "모두 가능"
            ],
            "correct_answer": 3,
            "explanation": "Checkbutton은 BooleanVar, IntVar, StringVar 등 다양한 tkinter 변수 타입을 사용할 수 있습니다."
        },
        {
            "id": 12,
            "type": "true_false",
            "difficulty": "기본",
            "question": "Frame 위젯은 다른 위젯들을 그룹화하는 컨테이너 역할을 합니다.",
            "correct_answer": true,
            "explanation": "Frame은 다른 위젯들을 포함하고 그룹화하는 컨테이너 위젯입니다."
        },
        {
            "id": 13,
            "type": "multiple_choice",
            "difficulty": "기본",
            "question": "Canvas 위젯에서 직사각형을 그리는 메서드는?",
            "options": [
                "create_rect()",
                "create_rectangle()",
                "draw_rect()",
                "add_rectangle()"
            ],
            "correct_answer": 1,
            "explanation": "Canvas의 create_rectangle() 메서드를 사용하여 직사각형을 그릴 수 있습니다."
        },
        {
            "id": 14,
            "type": "multiple_choice",
            "difficulty": "기본",
            "question": "Spinbox 위젯의 주요 용도는?",
            "options": [
                "텍스트 입력",
                "숫자 범위 선택",
                "색상 선택",
                "파일 선택"
            ],
            "correct_answer": 1,
            "explanation": "Spinbox는 주로 정해진 범위 내에서 숫자 값을 선택하는 데 사용됩니다."
        },
        {
            "id": 15,
            "type": "code",
            "difficulty": "기본",
            "question": "다음 코드에서 버튼 클릭 시 출력되는 값은?\n```python\nvar = tk.StringVar(value=\"초기값\")\nentry = tk.Entry(root, textvariable=var)\nbutton = tk.Button(root, command=lambda: print(var.get()))\n```",
            "correct_answer": "초기값 (또는 Entry에 입력된 값)",
            "explanation": "textvariable로 연결된 StringVar의 현재 값이 출력됩니다. Entry에 다른 값을 입력했다면 그 값이 출력됩니다."
        },
        {
            "id": 16,
            "type": "multiple_choice",
            "difficulty": "기본",
            "question": "messagebox.showinfo()의 주요 목적은?",
            "options": [
                "사용자 입력 받기",
                "정보 메시지 표시",
                "파일 선택",
                "색상 선택"
            ],
            "correct_answer": 1,
            "explanation": "messagebox.showinfo()는 사용자에게 정보성 메시지를 표시하는 대화상자를 띄웁니다."
        },
        {
            "id": 17,
            "type": "event_handling",
            "difficulty": "중급",
            "question": "마우스 왼쪽 버튼 클릭 이벤트를 바인딩하는 올바른 방법은?",
            "options": [
                "widget.bind(\"<Click>\", callback)",
                "widget.bind(\"<Button-1>\", callback)",
                "widget.bind(\"<LeftClick>\", callback)",
                "widget.bind(\"<Mouse-1>\", callback)"
            ],
            "correct_answer": 1,
            "explanation": "마우스 왼쪽 버튼 클릭은 '<Button-1>' 이벤트로 바인딩합니다."
        },
        {
            "id": 18,
            "type": "layout",
            "difficulty": "중급",
            "question": "grid 레이아웃에서 위젯이 셀보다 작을 때 셀 내에서의 위치를 조정하는 옵션은?",
            "options": [
                "anchor",
                "sticky",
                "align",
                "position"
            ],
            "correct_answer": 1,
            "explanation": "sticky 옵션은 위젯이 셀보다 작을 때 셀 내에서의 위치와 크기 조정을 제어합니다 (n, s, e, w)."
        },
        {
            "id": 19,
            "type": "code",
            "difficulty": "중급",
            "question": "다음 코드의 문제점은?\n```python\nfor i in range(3):\n    btn = tk.Button(root, text=f\"버튼 {i}\", \n                   command=lambda: print(i))\n    btn.pack()\n```",
            "correct_answer": "모든 버튼이 같은 값(2)을 출력함. 클로저 문제로 i가 마지막 값으로 고정됨",
            "explanation": "람다 함수가 클로저로 인해 루프의 마지막 i 값을 참조합니다. lambda i=i: print(i) 또는 functools.partial 사용으로 해결할 수 있습니다."
        },
        {
            "id": 20,
            "type": "widget_properties",
            "difficulty": "중급",
            "question": "Text 위젯에서 현재 커서 위치를 나타내는 인덱스는?",
            "options": [
                "CURRENT",
                "INSERT",
                "CURSOR",
                "ACTIVE"
            ],
            "correct_answer": 1,
            "explanation": "Text 위젯에서 INSERT는 현재 커서(삽입점) 위치를 나타내는 특수 인덱스입니다."
        },
        {
            "id": 21,
            "type": "scrollbar",
            "difficulty": "중급",
            "question": "Text 위젯에 수직 스크롤바를 연결하는 올바른 방법은?",
            "correct_answer": "scrollbar.config(command=text.yview)와 text.config(yscrollcommand=scrollbar.set) 모두 설정",
            "explanation": "스크롤바와 위젯을 양방향으로 연결해야 합니다. 스크롤바의 command와 위젯의 yscrollcommand를 서로 연결해야 합니다."
        },
        {
            "id": 22,
            "type": "multiple_choice",
            "difficulty": "중급",
            "question": "ttk 모듈의 주요 장점은?",
            "options": [
                "더 빠른 성능",
                "더 많은 위젯 종류",
                "테마 지원과 네이티브 룩앤필",
                "더 적은 메모리 사용"
            ],
            "correct_answer": 2,
            "explanation": "ttk(Themed Tk)는 운영체제의 네이티브 룩앤필과 테마를 지원하여 더 현대적인 UI를 제공합니다."
        },
        {
            "id": 23,
            "type": "menu_system",
            "difficulty": "중급",
            "question": "메뉴에 키보드 단축키 표시를 추가하는 옵션은?",
            "options": [
                "shortcut",
                "accelerator",
                "hotkey",
                "keycode"
            ],
            "correct_answer": 1,
            "explanation": "accelerator 옵션은 메뉴 항목에 키보드 단축키 텍스트를 표시합니다 (실제 바인딩은 별도로 해야 함)."
        },
        {
            "id": 24,
            "type": "dialog",
            "difficulty": "중급",
            "question": "사용자로부터 예/아니오 응답을 받는 대화상자는?",
            "options": [
                "messagebox.askquestion()",
                "messagebox.askyesno()",
                "messagebox.askokcancel()",
                "모두 가능"
            ],
            "correct_answer": 3,
            "explanation": "askquestion(), askyesno(), askokcancel() 모두 사용자로부터 이진 선택을 받을 수 있지만 반환값이 다릅니다."
        },
        {
            "id": 25,
            "type": "geometry",
            "difficulty": "중급",
            "question": "윈도우 크기를 조정 불가능하게 만드는 메서드는?",
            "options": [
                "root.resizable(False, False)",
                "root.geometry(\"fixed\")",
                "root.maxsize(width, height)",
                "root.configure(resize=False)"
            ],
            "correct_answer": 0,
            "explanation": "resizable(False, False)는 윈도우의 가로와 세로 크기 조정을 모두 비활성화합니다."
        },
        {
            "id": 26,
            "type": "variable_types",
            "difficulty": "중급",
            "question": "tkinter 변수 클래스 중 실수값을 저장하는 것은?",
            "options": [
                "IntVar",
                "StringVar",
                "DoubleVar",
                "FloatVar"
            ],
            "correct_answer": 2,
            "explanation": "DoubleVar는 실수(부동소수점) 값을 저장하는 tkinter 변수 클래스입니다."
        },
        {
            "id": 27,
            "type": "canvas_advanced",
            "difficulty": "중급",
            "question": "Canvas에서 그린 객체를 삭제하는 메서드는?",
            "options": [
                "remove()",
                "delete()",
                "clear()",
                "erase()"
            ],
            "correct_answer": 1,
            "explanation": "Canvas의 delete() 메서드를 사용하여 그린 객체를 삭제할 수 있습니다."
        },
        {
            "id": 28,
            "type": "event_modifiers",
            "difficulty": "중급",
            "question": "Ctrl+클릭 이벤트를 바인딩하는 올바른 방법은?",
            "options": [
                "<Control-Button-1>",
                "<Ctrl-Click>",
                "<Control-Click>",
                "<Ctrl-Button-1>"
            ],
            "correct_answer": 0,
            "explanation": "Ctrl+마우스 클릭은 '<Control-Button-1>' 패턴으로 바인딩합니다."
        },
        {
            "id": 29,
            "type": "toplevel",
            "difficulty": "중급",
            "question": "새로운 톱레벨 윈도우를 생성하는 클래스는?",
            "options": [
                "Window",
                "Toplevel",
                "Dialog",
                "Popup"
            ],
            "correct_answer": 1,
            "explanation": "Toplevel 클래스는 메인 윈도우와 독립적인 새로운 톱레벨 윈도우를 생성합니다."
        },
        {
            "id": 30,
            "type": "focus_management",
            "difficulty": "중급",
            "question": "특정 위젯에 키보드 포커스를 설정하는 메서드는?",
            "options": [
                "widget.focus()",
                "widget.focus_set()",
                "widget.set_focus()",
                "widget.activate()"
            ],
            "correct_answer": 1,
            "explanation": "focus_set() 메서드는 해당 위젯에 키보드 포커스를 설정합니다."
        },
        {
            "id": 31,
            "type": "image_handling",
            "difficulty": "중급",
            "question": "tkinter에서 이미지를 표시하기 위해 주로 사용되는 클래스는?",
            "options": [
                "Image",
                "PhotoImage",
                "Picture",
                "Bitmap"
            ],
            "correct_answer": 1,
            "explanation": "PhotoImage 클래스는 GIF, PPM 등의 이미지 파일을 로드하고 표시하는 데 사용됩니다."
        },
        {
            "id": 32,
            "type": "validation",
            "difficulty": "중급",
            "question": "Entry 위젯에서 입력 검증을 수행하는 옵션은?",
            "options": [
                "validator",
                "validate",
                "check",
                "verify"
            ],
            "correct_answer": 1,
            "explanation": "validate 옵션과 validatecommand를 사용하여 Entry 위젯의 입력 검증을 수행할 수 있습니다."
        },
        {
            "id": 33,
            "type": "protocol_handling",
            "difficulty": "중급",
            "question": "윈도우 닫기 이벤트를 가로채는 메서드는?",
            "options": [
                "root.bind(\"<Destroy>\", callback)",
                "root.protocol(\"WM_DELETE_WINDOW\", callback)",
                "root.on_close(callback)",
                "root.close_handler(callback)"
            ],
            "correct_answer": 1,
            "explanation": "protocol(\"WM_DELETE_WINDOW\", callback)은 사용자가 윈도우를 닫으려 할 때 호출될 함수를 지정합니다."
        },
        {
            "id": 34,
            "type": "performance",
            "difficulty": "중급",
            "question": "대량의 위젯 업데이트 시 성능을 향상시키는 방법은?",
            "correct_answer": "update_idletasks() 사용, 배치 업데이트, 가상화 기법 적용",
            "explanation": "update_idletasks()로 필요한 업데이트만 수행하고, 한 번에 여러 변경사항을 적용하며, 큰 목록의 경우 가상화를 사용합니다."
        },
        {
            "id": 35,
            "type": "custom_widget",
            "difficulty": "고급",
            "question": "커스텀 위젯을 만들 때 일반적으로 상속받는 클래스는?",
            "options": [
                "tk.Widget",
                "tk.Frame",
                "tk.Toplevel",
                "tk.BaseWidget"
            ],
            "correct_answer": 1,
            "explanation": "커스텀 위젯은 주로 tk.Frame을 상속받아 여러 기본 위젯을 조합하여 만듭니다."
        },
        {
            "id": 36,
            "type": "threading_gui",
            "difficulty": "고급",
            "question": "GUI 애플리케이션에서 별도 스레드에서 UI를 업데이트할 때 주의사항은?",
            "correct_answer": "메인 스레드에서만 UI 업데이트 수행, after() 메서드나 Queue 사용으로 스레드 간 통신",
            "explanation": "tkinter는 스레드 안전하지 않으므로, 별도 스레드에서는 직접 UI를 수정하지 말고 메인 스레드로 작업을 위임해야 합니다."
        },
        {
            "id": 37,
            "type": "memory_management",
            "difficulty": "고급",
            "question": "tkinter 애플리케이션에서 메모리 누수를 방지하는 방법은?",
            "correct_answer": "위젯 참조 해제, 이벤트 바인딩 해제, 이미지 객체 관리, 적절한 destroy() 호출",
            "explanation": "위젯이 제거될 때 모든 참조를 해제하고, 바인딩된 이벤트를 해제하며, 이미지 등의 리소스를 적절히 관리해야 합니다."
        },
        {
            "id": 38,
            "type": "accessibility",
            "difficulty": "고급",
            "question": "GUI 접근성 향상을 위한 tkinter 기법은?",
            "correct_answer": "키보드 탐색 지원, 툴팁 제공, 적절한 색상 대비, 포커스 관리, 스크린 리더 지원",
            "explanation": "Tab 키 탐색, 키보드 단축키, 시각적 피드백, 음성 지원 등을 통해 접근성을 향상시킬 수 있습니다."
        },
        {
            "id": 39,
            "type": "responsive_design",
            "difficulty": "고급",
            "question": "다양한 화면 크기에 대응하는 반응형 GUI 설계 원칙은?",
            "correct_answer": "상대적 크기 사용, 가중치 기반 레이아웃, 최소/최대 크기 설정, 동적 폰트 크기 조정",
            "explanation": "절대값 대신 상대값을 사용하고, 그리드 가중치와 sticky 옵션을 활용하여 화면 크기 변화에 적응하는 UI를 만듭니다."
        },
        {
            "id": 40,
            "type": "design_patterns",
            "difficulty": "고급",
            "question": "GUI 애플리케이션에서 MVC 패턴을 적용할 때의 이점은?",
            "correct_answer": "UI와 비즈니스 로직 분리, 테스트 용이성, 재사용성 증가, 유지보수성 향상",
            "explanation": "Model(데이터), View(UI), Controller(제어) 분리로 각 컴포넌트의 책임이 명확해지고 독립적인 개발과 테스트가 가능합니다."
        },
        {
            "id": 41,
            "type": "modern_alternatives",
            "difficulty": "전문가",
            "question": "tkinter의 한계와 현대적 GUI 프레임워크 대안들의 특징은?",
            "correct_answer": "tkinter: 간단하지만 제한적 스타일링. 대안: PyQt/PySide(풍부한 기능), Kivy(터치/모바일), Dear PyGui(게임/시각화)",
            "explanation": "tkinter는 기본적이지만 현대적 UI 요구사항에는 한계가 있습니다. 프로젝트 요구사항에 따라 적절한 GUI 프레임워크를 선택해야 합니다."
        },
        {
            "id": 42,
            "type": "future_trends",
            "difficulty": "전문가",
            "question": "GUI 개발의 미래 트렌드와 tkinter의 진화 방향은?",
            "correct_answer": "웹 기반 GUI 증가, 반응형 디자인, AI 통합 인터페이스, 크로스 플랫폼 개발, 접근성 강화",
            "explanation": "웹 기반 인터페이스가 증가하고 있지만, tkinter는 여전히 데스크톱 애플리케이션의 빠른 프로토타이핑과 교육용으로 중요한 역할을 합니다."
        }
    ]
}